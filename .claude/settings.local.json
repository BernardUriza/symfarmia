{
  "permissions": {
    "allow": [
      "Bash(find:*)",
      "Bash(rg:*)",
      "Bash(grep:*)",
      "Bash(rm:*)",
      "Bash(npm install)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(npm test:*)",
      "Bash(npm install:*)",
      "Bash(node:*)",
      "Bash(npm --version)",
      "Bash(ls:*)",
      "Bash(npx next dev:*)",
      "Bash(npx jest:*)",
      "Bash(npm run dev:*)",
      "Bash(npm run build:*)",
      "Bash(cp:*)",
      "Bash(npx prisma:*)",
      "Bash(npm outdated)",
      "Bash(cat:*)",
      "Bash(npm audit:*)",
      "Bash(npm view:*)",
      "Bash(npm cache clean:*)",
      "Bash(npm i:*)",
      "Bash(npm run lint)",
      "Bash(npx next lint:*)",
      "Bash(npx next:*)",
      "Bash(./node_modules/.bin/next:*)",
      "Bash(timeout 300 npm install)",
      "Bash(sudo rm:*)",
      "Bash(npm run type-check:*)",
      "Bash(npm uninstall:*)",
      "WebFetch(domain:gist.github.com)",
      "WebFetch(domain:heroicons.com)",
      "Bash(timeout 60 npm run build)",
      "Bash(timeout 90 npm run build)",
      "Bash(timeout 120 npm run build)",
      "Bash(npx tsc:*)",
      "Bash(npx eslint:*)",
      "Bash(pkill:*)",
      "Bash(true)",
      "Bash(npx tailwindcss:*)",
      "Bash(touch:*)",
      "Bash(npm update:*)",
      "Bash(git push:*)",
      "Bash(curl:*)",
      "Bash(git config:*)",
      "Bash(docker:*)",
      "Bash(sudo touch:*)",
      "Bash(git rebase:*)",
      "Bash(git pull:*)",
      "Bash(timeout 30s npm run dev)",
      "Bash(chmod:*)",
      "Bash(timeout 20s npm run dev)",
      "Bash(DEBUG=*)",
      "Bash(npm run cache:clean:*)",
      "Bash(env)",
      "mcp__ide__getDiagnostics",
      "Bash(npm ls:*)",
      "Bash(NODE_OPTIONS=\"--max-old-space-size=2048\" timeout 180s npm run build)",
      "Bash(timeout 60s npm run build)",
      "Bash(timeout 30s npm run build)",
      "Bash(NODE_OPTIONS=\"--max-old-space-size=4096\" timeout 120s npm run build)",
      "Bash(kill:*)",
      "Bash(git rm:*)",
      "Bash(NODE_OPTIONS=\"--max-old-space-size=6144\" npx next build --debug)",
      "Bash(NODE_OPTIONS=\"--max-old-space-size=2048\" timeout 120s npm run build)",
      "Bash(WEBPACK_MINIMIZE=false NODE_OPTIONS=\"--max-old-space-size=6144\" next build --no-lint)",
      "Bash(WEBPACK_MINIMIZE=false NODE_OPTIONS=\"--max-old-space-size=6144\" npx next build --no-lint)",
      "Bash(timeout 10s npm run dev)",
      "Bash(npm run clean:*)",
      "Bash(./scripts/quick-setup.sh:*)",
      "Bash(npm run ci:status:*)",
      "Bash(./scripts/concise-cicd-system.sh restart:*)",
      "Bash(diff:*)",
      "Bash(awk:*)",
      "Bash(SKIP_TYPE_CHECK=true npm run build:fast)",
      "Bash(PORT=3001 npm run dev)",
      "Bash(npm run ci:restart:*)",
      "Bash(npm run:*)",
      "Bash(sudo fuser:*)",
      "Bash(ss:*)",
      "WebFetch(domain:localhost)",
      "Bash(PORT=3002 npm run dev)",
      "Bash(git checkout:*)",
      "Bash(timeout:*)",
      "Bash(for file in /workspaces/symfarmia/app/components/medical/*.js)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(head:*)",
      "Bash(done)",
      "Bash(NODE_ENV=production npm run build)",
      "Bash(NODE_ENV=development npm run dev --turbo)",
      "Bash(NODE_ENV=development npm run dev)",
      "mcp__ide__executeCode",
      "Bash(npx postcss:*)",
      "Bash(netlify dev:*)",
      "Bash(tail:*)"
    ],
    "deny": []
  }
}