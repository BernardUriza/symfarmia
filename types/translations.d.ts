/**
 * Auto-generated combined TypeScript definitions for all translations
 * Generated by Performance Revolution System
 */

import { ESTranslations } from './translations-es';
import { ENTranslations } from './translations-en';

export type AllTranslations = ESTranslations | ENTranslations;

export type SupportedLocale = 'es' | 'en';

export interface I18nContextType {
  locale: SupportedLocale;
  translations: AllTranslations;
  t: (key: keyof AllTranslations, params?: Record<string, string | number>) => string;
  setLocale: (locale: SupportedLocale) => void;
  isLoading: boolean;
}

export interface TranslationMonitor {
  track: (key: string, locale: string, rendered: string, loadTime?: number) => void;
  generateReport: () => TranslationReport;
}

export interface TranslationReport {
  totalTranslations: number;
  missingTranslations: string[];
  mostUsedTranslations: Array<[string, { count: number; lastUsed: string }]>;
  averageLoadTime: number;
}
